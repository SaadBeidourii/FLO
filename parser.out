Grammar:

Rule 0     S' -> prog
Rule 1     prog -> listeInstructions
Rule 2     listeInstructions -> instruction listeInstructions
Rule 3     listeInstructions -> instruction
Rule 4     instruction -> ecrire
Rule 5     ecrire -> ECRIRE ( expr ) ;
Rule 6     facteur -> IDENTIFIANT ( exprList )
Rule 7     facteur -> IDENTIFIANT ( )
Rule 8     facteur -> LIRE ( )
Rule 9     facteur -> IDENTIFIANT
Rule 10    facteur -> ENTIER
Rule 11    facteur -> ( expr )
Rule 12    produit -> produit % facteur
Rule 13    produit -> produit / facteur
Rule 14    produit -> produit * facteur
Rule 15    produit -> facteur
Rule 16    expr -> booleen
Rule 17    expr -> - facteur
Rule 18    expr -> expr - produit
Rule 19    expr -> expr + produit
Rule 20    expr -> produit
Rule 21    exprList -> expr , exprList
Rule 22    exprList -> expr
Rule 23    booleen -> facteur SUPERIEUR_OU_EGAL facteur
Rule 24    booleen -> facteur INFERIEUR_OU_EGAL facteur
Rule 25    booleen -> facteur NON_EGAL facteur
Rule 26    booleen -> facteur EGAL facteur
Rule 27    booleen -> booleen OU booleen
Rule 28    booleen -> booleen ET booleen
Rule 29    booleen -> NON booleen
Rule 30    booleen -> BOOLEEN

Unused terminals:

    RETOURNER
    FAUX
    TANT_QUE
    SI
    SINON
    VRAI

Terminals, with rules where they appear:

%                    : 12
(                    : 5 6 7 8 11
)                    : 5 6 7 8 11
*                    : 14
+                    : 19
,                    : 21
-                    : 17 18
/                    : 13
;                    : 5
BOOLEEN              : 30
ECRIRE               : 5
EGAL                 : 26
ENTIER               : 10
ET                   : 28
FAUX                 : 
IDENTIFIANT          : 6 7 9
INFERIEUR_OU_EGAL    : 24
LIRE                 : 8
NON                  : 29
NON_EGAL             : 25
OU                   : 27
RETOURNER            : 
SI                   : 
SINON                : 
SUPERIEUR_OU_EGAL    : 23
TANT_QUE             : 
VRAI                 : 
error                : 

Nonterminals, with rules where they appear:

booleen              : 16 27 27 28 28 29
ecrire               : 4
expr                 : 5 11 18 19 21 22
exprList             : 6 21
facteur              : 12 13 14 15 17 23 23 24 24 25 25 26 26
instruction          : 2 3
listeInstructions    : 1 2
produit              : 12 13 14 18 19 20
prog                 : 0


state 0

    (0) S' -> . prog
    (1) prog -> . listeInstructions
    (2) listeInstructions -> . instruction listeInstructions
    (3) listeInstructions -> . instruction
    (4) instruction -> . ecrire
    (5) ecrire -> . ECRIRE ( expr ) ;
    ECRIRE          shift and go to state 5

    prog                           shift and go to state 1
    listeInstructions              shift and go to state 2
    instruction                    shift and go to state 3
    ecrire                         shift and go to state 4

state 1

    (0) S' -> prog .


state 2

    (1) prog -> listeInstructions .
    $end            reduce using rule 1 (prog -> listeInstructions .)


state 3

    (2) listeInstructions -> instruction . listeInstructions
    (3) listeInstructions -> instruction .
    (2) listeInstructions -> . instruction listeInstructions
    (3) listeInstructions -> . instruction
    (4) instruction -> . ecrire
    (5) ecrire -> . ECRIRE ( expr ) ;
    $end            reduce using rule 3 (listeInstructions -> instruction .)
    ECRIRE          shift and go to state 5

    instruction                    shift and go to state 3
    listeInstructions              shift and go to state 6
    ecrire                         shift and go to state 4

state 4

    (4) instruction -> ecrire .
    ECRIRE          reduce using rule 4 (instruction -> ecrire .)
    $end            reduce using rule 4 (instruction -> ecrire .)


state 5

    (5) ecrire -> ECRIRE . ( expr ) ;
    (               shift and go to state 7


state 6

    (2) listeInstructions -> instruction listeInstructions .
    $end            reduce using rule 2 (listeInstructions -> instruction listeInstructions .)


state 7

    (5) ecrire -> ECRIRE ( . expr ) ;
    (16) expr -> . booleen
    (17) expr -> . - facteur
    (18) expr -> . expr - produit
    (19) expr -> . expr + produit
    (20) expr -> . produit
    (23) booleen -> . facteur SUPERIEUR_OU_EGAL facteur
    (24) booleen -> . facteur INFERIEUR_OU_EGAL facteur
    (25) booleen -> . facteur NON_EGAL facteur
    (26) booleen -> . facteur EGAL facteur
    (27) booleen -> . booleen OU booleen
    (28) booleen -> . booleen ET booleen
    (29) booleen -> . NON booleen
    (30) booleen -> . BOOLEEN
    (12) produit -> . produit % facteur
    (13) produit -> . produit / facteur
    (14) produit -> . produit * facteur
    (15) produit -> . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    -               shift and go to state 11
    NON             shift and go to state 14
    BOOLEEN         shift and go to state 15
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    expr                           shift and go to state 9
    booleen                        shift and go to state 10
    facteur                        shift and go to state 12
    produit                        shift and go to state 13

state 8

    (11) facteur -> ( . expr )
    (16) expr -> . booleen
    (17) expr -> . - facteur
    (18) expr -> . expr - produit
    (19) expr -> . expr + produit
    (20) expr -> . produit
    (23) booleen -> . facteur SUPERIEUR_OU_EGAL facteur
    (24) booleen -> . facteur INFERIEUR_OU_EGAL facteur
    (25) booleen -> . facteur NON_EGAL facteur
    (26) booleen -> . facteur EGAL facteur
    (27) booleen -> . booleen OU booleen
    (28) booleen -> . booleen ET booleen
    (29) booleen -> . NON booleen
    (30) booleen -> . BOOLEEN
    (12) produit -> . produit % facteur
    (13) produit -> . produit / facteur
    (14) produit -> . produit * facteur
    (15) produit -> . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    -               shift and go to state 11
    NON             shift and go to state 14
    BOOLEEN         shift and go to state 15
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    expr                           shift and go to state 19
    booleen                        shift and go to state 10
    facteur                        shift and go to state 12
    produit                        shift and go to state 13

state 9

    (5) ecrire -> ECRIRE ( expr . ) ;
    (18) expr -> expr . - produit
    (19) expr -> expr . + produit
    )               shift and go to state 20
    -               shift and go to state 21
    +               shift and go to state 22


state 10

    (16) expr -> booleen .
    (27) booleen -> booleen . OU booleen
    (28) booleen -> booleen . ET booleen
    )               reduce using rule 16 (expr -> booleen .)
    -               reduce using rule 16 (expr -> booleen .)
    +               reduce using rule 16 (expr -> booleen .)
    ,               reduce using rule 16 (expr -> booleen .)
    OU              shift and go to state 23
    ET              shift and go to state 24


state 11

    (17) expr -> - . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    facteur                        shift and go to state 25

state 12

    (23) booleen -> facteur . SUPERIEUR_OU_EGAL facteur
    (24) booleen -> facteur . INFERIEUR_OU_EGAL facteur
    (25) booleen -> facteur . NON_EGAL facteur
    (26) booleen -> facteur . EGAL facteur
    (15) produit -> facteur .
    SUPERIEUR_OU_EGAL shift and go to state 26
    INFERIEUR_OU_EGAL shift and go to state 27
    NON_EGAL        shift and go to state 28
    EGAL            shift and go to state 29
    %               reduce using rule 15 (produit -> facteur .)
    /               reduce using rule 15 (produit -> facteur .)
    *               reduce using rule 15 (produit -> facteur .)
    )               reduce using rule 15 (produit -> facteur .)
    -               reduce using rule 15 (produit -> facteur .)
    +               reduce using rule 15 (produit -> facteur .)
    ,               reduce using rule 15 (produit -> facteur .)


state 13

    (20) expr -> produit .
    (12) produit -> produit . % facteur
    (13) produit -> produit . / facteur
    (14) produit -> produit . * facteur
    )               reduce using rule 20 (expr -> produit .)
    -               reduce using rule 20 (expr -> produit .)
    +               reduce using rule 20 (expr -> produit .)
    ,               reduce using rule 20 (expr -> produit .)
    %               shift and go to state 30
    /               shift and go to state 31
    *               shift and go to state 32


state 14

    (29) booleen -> NON . booleen
    (23) booleen -> . facteur SUPERIEUR_OU_EGAL facteur
    (24) booleen -> . facteur INFERIEUR_OU_EGAL facteur
    (25) booleen -> . facteur NON_EGAL facteur
    (26) booleen -> . facteur EGAL facteur
    (27) booleen -> . booleen OU booleen
    (28) booleen -> . booleen ET booleen
    (29) booleen -> . NON booleen
    (30) booleen -> . BOOLEEN
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    NON             shift and go to state 14
    BOOLEEN         shift and go to state 15
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    booleen                        shift and go to state 33
    facteur                        shift and go to state 34

state 15

    (30) booleen -> BOOLEEN .
    OU              reduce using rule 30 (booleen -> BOOLEEN .)
    ET              reduce using rule 30 (booleen -> BOOLEEN .)
    )               reduce using rule 30 (booleen -> BOOLEEN .)
    -               reduce using rule 30 (booleen -> BOOLEEN .)
    +               reduce using rule 30 (booleen -> BOOLEEN .)
    ,               reduce using rule 30 (booleen -> BOOLEEN .)


state 16

    (6) facteur -> IDENTIFIANT . ( exprList )
    (7) facteur -> IDENTIFIANT . ( )
    (9) facteur -> IDENTIFIANT .
    (               shift and go to state 35
    SUPERIEUR_OU_EGAL reduce using rule 9 (facteur -> IDENTIFIANT .)
    INFERIEUR_OU_EGAL reduce using rule 9 (facteur -> IDENTIFIANT .)
    NON_EGAL        reduce using rule 9 (facteur -> IDENTIFIANT .)
    EGAL            reduce using rule 9 (facteur -> IDENTIFIANT .)
    %               reduce using rule 9 (facteur -> IDENTIFIANT .)
    /               reduce using rule 9 (facteur -> IDENTIFIANT .)
    *               reduce using rule 9 (facteur -> IDENTIFIANT .)
    )               reduce using rule 9 (facteur -> IDENTIFIANT .)
    -               reduce using rule 9 (facteur -> IDENTIFIANT .)
    +               reduce using rule 9 (facteur -> IDENTIFIANT .)
    ,               reduce using rule 9 (facteur -> IDENTIFIANT .)
    OU              reduce using rule 9 (facteur -> IDENTIFIANT .)
    ET              reduce using rule 9 (facteur -> IDENTIFIANT .)


state 17

    (8) facteur -> LIRE . ( )
    (               shift and go to state 36


state 18

    (10) facteur -> ENTIER .
    SUPERIEUR_OU_EGAL reduce using rule 10 (facteur -> ENTIER .)
    INFERIEUR_OU_EGAL reduce using rule 10 (facteur -> ENTIER .)
    NON_EGAL        reduce using rule 10 (facteur -> ENTIER .)
    EGAL            reduce using rule 10 (facteur -> ENTIER .)
    %               reduce using rule 10 (facteur -> ENTIER .)
    /               reduce using rule 10 (facteur -> ENTIER .)
    *               reduce using rule 10 (facteur -> ENTIER .)
    )               reduce using rule 10 (facteur -> ENTIER .)
    -               reduce using rule 10 (facteur -> ENTIER .)
    +               reduce using rule 10 (facteur -> ENTIER .)
    ,               reduce using rule 10 (facteur -> ENTIER .)
    OU              reduce using rule 10 (facteur -> ENTIER .)
    ET              reduce using rule 10 (facteur -> ENTIER .)


state 19

    (11) facteur -> ( expr . )
    (18) expr -> expr . - produit
    (19) expr -> expr . + produit
    )               shift and go to state 37
    -               shift and go to state 21
    +               shift and go to state 22


state 20

    (5) ecrire -> ECRIRE ( expr ) . ;
    ;               shift and go to state 38


state 21

    (18) expr -> expr - . produit
    (12) produit -> . produit % facteur
    (13) produit -> . produit / facteur
    (14) produit -> . produit * facteur
    (15) produit -> . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    produit                        shift and go to state 39
    facteur                        shift and go to state 40

state 22

    (19) expr -> expr + . produit
    (12) produit -> . produit % facteur
    (13) produit -> . produit / facteur
    (14) produit -> . produit * facteur
    (15) produit -> . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    produit                        shift and go to state 41
    facteur                        shift and go to state 40

state 23

    (27) booleen -> booleen OU . booleen
    (23) booleen -> . facteur SUPERIEUR_OU_EGAL facteur
    (24) booleen -> . facteur INFERIEUR_OU_EGAL facteur
    (25) booleen -> . facteur NON_EGAL facteur
    (26) booleen -> . facteur EGAL facteur
    (27) booleen -> . booleen OU booleen
    (28) booleen -> . booleen ET booleen
    (29) booleen -> . NON booleen
    (30) booleen -> . BOOLEEN
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    NON             shift and go to state 14
    BOOLEEN         shift and go to state 15
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    booleen                        shift and go to state 42
    facteur                        shift and go to state 34

state 24

    (28) booleen -> booleen ET . booleen
    (23) booleen -> . facteur SUPERIEUR_OU_EGAL facteur
    (24) booleen -> . facteur INFERIEUR_OU_EGAL facteur
    (25) booleen -> . facteur NON_EGAL facteur
    (26) booleen -> . facteur EGAL facteur
    (27) booleen -> . booleen OU booleen
    (28) booleen -> . booleen ET booleen
    (29) booleen -> . NON booleen
    (30) booleen -> . BOOLEEN
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    NON             shift and go to state 14
    BOOLEEN         shift and go to state 15
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    booleen                        shift and go to state 43
    facteur                        shift and go to state 34

state 25

    (17) expr -> - facteur .
    )               reduce using rule 17 (expr -> - facteur .)
    -               reduce using rule 17 (expr -> - facteur .)
    +               reduce using rule 17 (expr -> - facteur .)
    ,               reduce using rule 17 (expr -> - facteur .)


state 26

    (23) booleen -> facteur SUPERIEUR_OU_EGAL . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    facteur                        shift and go to state 44

state 27

    (24) booleen -> facteur INFERIEUR_OU_EGAL . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    facteur                        shift and go to state 45

state 28

    (25) booleen -> facteur NON_EGAL . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    facteur                        shift and go to state 46

state 29

    (26) booleen -> facteur EGAL . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    facteur                        shift and go to state 47

state 30

    (12) produit -> produit % . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    facteur                        shift and go to state 48

state 31

    (13) produit -> produit / . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    facteur                        shift and go to state 49

state 32

    (14) produit -> produit * . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    facteur                        shift and go to state 50

state 33

    (29) booleen -> NON booleen .
    (27) booleen -> booleen . OU booleen
    (28) booleen -> booleen . ET booleen
  ! shift/reduce conflict for OU resolved as shift
  ! shift/reduce conflict for ET resolved as shift
    )               reduce using rule 29 (booleen -> NON booleen .)
    -               reduce using rule 29 (booleen -> NON booleen .)
    +               reduce using rule 29 (booleen -> NON booleen .)
    ,               reduce using rule 29 (booleen -> NON booleen .)
    OU              shift and go to state 23
    ET              shift and go to state 24


state 34

    (23) booleen -> facteur . SUPERIEUR_OU_EGAL facteur
    (24) booleen -> facteur . INFERIEUR_OU_EGAL facteur
    (25) booleen -> facteur . NON_EGAL facteur
    (26) booleen -> facteur . EGAL facteur
    SUPERIEUR_OU_EGAL shift and go to state 26
    INFERIEUR_OU_EGAL shift and go to state 27
    NON_EGAL        shift and go to state 28
    EGAL            shift and go to state 29


state 35

    (6) facteur -> IDENTIFIANT ( . exprList )
    (7) facteur -> IDENTIFIANT ( . )
    (21) exprList -> . expr , exprList
    (22) exprList -> . expr
    (16) expr -> . booleen
    (17) expr -> . - facteur
    (18) expr -> . expr - produit
    (19) expr -> . expr + produit
    (20) expr -> . produit
    (23) booleen -> . facteur SUPERIEUR_OU_EGAL facteur
    (24) booleen -> . facteur INFERIEUR_OU_EGAL facteur
    (25) booleen -> . facteur NON_EGAL facteur
    (26) booleen -> . facteur EGAL facteur
    (27) booleen -> . booleen OU booleen
    (28) booleen -> . booleen ET booleen
    (29) booleen -> . NON booleen
    (30) booleen -> . BOOLEEN
    (12) produit -> . produit % facteur
    (13) produit -> . produit / facteur
    (14) produit -> . produit * facteur
    (15) produit -> . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    )               shift and go to state 52
    -               shift and go to state 11
    NON             shift and go to state 14
    BOOLEEN         shift and go to state 15
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    exprList                       shift and go to state 51
    expr                           shift and go to state 53
    booleen                        shift and go to state 10
    facteur                        shift and go to state 12
    produit                        shift and go to state 13

state 36

    (8) facteur -> LIRE ( . )
    )               shift and go to state 54


state 37

    (11) facteur -> ( expr ) .
    SUPERIEUR_OU_EGAL reduce using rule 11 (facteur -> ( expr ) .)
    INFERIEUR_OU_EGAL reduce using rule 11 (facteur -> ( expr ) .)
    NON_EGAL        reduce using rule 11 (facteur -> ( expr ) .)
    EGAL            reduce using rule 11 (facteur -> ( expr ) .)
    %               reduce using rule 11 (facteur -> ( expr ) .)
    /               reduce using rule 11 (facteur -> ( expr ) .)
    *               reduce using rule 11 (facteur -> ( expr ) .)
    )               reduce using rule 11 (facteur -> ( expr ) .)
    -               reduce using rule 11 (facteur -> ( expr ) .)
    +               reduce using rule 11 (facteur -> ( expr ) .)
    ,               reduce using rule 11 (facteur -> ( expr ) .)
    OU              reduce using rule 11 (facteur -> ( expr ) .)
    ET              reduce using rule 11 (facteur -> ( expr ) .)


state 38

    (5) ecrire -> ECRIRE ( expr ) ; .
    ECRIRE          reduce using rule 5 (ecrire -> ECRIRE ( expr ) ; .)
    $end            reduce using rule 5 (ecrire -> ECRIRE ( expr ) ; .)


state 39

    (18) expr -> expr - produit .
    (12) produit -> produit . % facteur
    (13) produit -> produit . / facteur
    (14) produit -> produit . * facteur
    )               reduce using rule 18 (expr -> expr - produit .)
    -               reduce using rule 18 (expr -> expr - produit .)
    +               reduce using rule 18 (expr -> expr - produit .)
    ,               reduce using rule 18 (expr -> expr - produit .)
    %               shift and go to state 30
    /               shift and go to state 31
    *               shift and go to state 32


state 40

    (15) produit -> facteur .
    %               reduce using rule 15 (produit -> facteur .)
    /               reduce using rule 15 (produit -> facteur .)
    *               reduce using rule 15 (produit -> facteur .)
    )               reduce using rule 15 (produit -> facteur .)
    -               reduce using rule 15 (produit -> facteur .)
    +               reduce using rule 15 (produit -> facteur .)
    ,               reduce using rule 15 (produit -> facteur .)


state 41

    (19) expr -> expr + produit .
    (12) produit -> produit . % facteur
    (13) produit -> produit . / facteur
    (14) produit -> produit . * facteur
    )               reduce using rule 19 (expr -> expr + produit .)
    -               reduce using rule 19 (expr -> expr + produit .)
    +               reduce using rule 19 (expr -> expr + produit .)
    ,               reduce using rule 19 (expr -> expr + produit .)
    %               shift and go to state 30
    /               shift and go to state 31
    *               shift and go to state 32


state 42

    (27) booleen -> booleen OU booleen .
    (27) booleen -> booleen . OU booleen
    (28) booleen -> booleen . ET booleen
  ! shift/reduce conflict for OU resolved as shift
  ! shift/reduce conflict for ET resolved as shift
    )               reduce using rule 27 (booleen -> booleen OU booleen .)
    -               reduce using rule 27 (booleen -> booleen OU booleen .)
    +               reduce using rule 27 (booleen -> booleen OU booleen .)
    ,               reduce using rule 27 (booleen -> booleen OU booleen .)
    OU              shift and go to state 23
    ET              shift and go to state 24


state 43

    (28) booleen -> booleen ET booleen .
    (27) booleen -> booleen . OU booleen
    (28) booleen -> booleen . ET booleen
  ! shift/reduce conflict for OU resolved as shift
  ! shift/reduce conflict for ET resolved as shift
    )               reduce using rule 28 (booleen -> booleen ET booleen .)
    -               reduce using rule 28 (booleen -> booleen ET booleen .)
    +               reduce using rule 28 (booleen -> booleen ET booleen .)
    ,               reduce using rule 28 (booleen -> booleen ET booleen .)
    OU              shift and go to state 23
    ET              shift and go to state 24


state 44

    (23) booleen -> facteur SUPERIEUR_OU_EGAL facteur .
    OU              reduce using rule 23 (booleen -> facteur SUPERIEUR_OU_EGAL facteur .)
    ET              reduce using rule 23 (booleen -> facteur SUPERIEUR_OU_EGAL facteur .)
    )               reduce using rule 23 (booleen -> facteur SUPERIEUR_OU_EGAL facteur .)
    -               reduce using rule 23 (booleen -> facteur SUPERIEUR_OU_EGAL facteur .)
    +               reduce using rule 23 (booleen -> facteur SUPERIEUR_OU_EGAL facteur .)
    ,               reduce using rule 23 (booleen -> facteur SUPERIEUR_OU_EGAL facteur .)


state 45

    (24) booleen -> facteur INFERIEUR_OU_EGAL facteur .
    OU              reduce using rule 24 (booleen -> facteur INFERIEUR_OU_EGAL facteur .)
    ET              reduce using rule 24 (booleen -> facteur INFERIEUR_OU_EGAL facteur .)
    )               reduce using rule 24 (booleen -> facteur INFERIEUR_OU_EGAL facteur .)
    -               reduce using rule 24 (booleen -> facteur INFERIEUR_OU_EGAL facteur .)
    +               reduce using rule 24 (booleen -> facteur INFERIEUR_OU_EGAL facteur .)
    ,               reduce using rule 24 (booleen -> facteur INFERIEUR_OU_EGAL facteur .)


state 46

    (25) booleen -> facteur NON_EGAL facteur .
    OU              reduce using rule 25 (booleen -> facteur NON_EGAL facteur .)
    ET              reduce using rule 25 (booleen -> facteur NON_EGAL facteur .)
    )               reduce using rule 25 (booleen -> facteur NON_EGAL facteur .)
    -               reduce using rule 25 (booleen -> facteur NON_EGAL facteur .)
    +               reduce using rule 25 (booleen -> facteur NON_EGAL facteur .)
    ,               reduce using rule 25 (booleen -> facteur NON_EGAL facteur .)


state 47

    (26) booleen -> facteur EGAL facteur .
    OU              reduce using rule 26 (booleen -> facteur EGAL facteur .)
    ET              reduce using rule 26 (booleen -> facteur EGAL facteur .)
    )               reduce using rule 26 (booleen -> facteur EGAL facteur .)
    -               reduce using rule 26 (booleen -> facteur EGAL facteur .)
    +               reduce using rule 26 (booleen -> facteur EGAL facteur .)
    ,               reduce using rule 26 (booleen -> facteur EGAL facteur .)


state 48

    (12) produit -> produit % facteur .
    %               reduce using rule 12 (produit -> produit % facteur .)
    /               reduce using rule 12 (produit -> produit % facteur .)
    *               reduce using rule 12 (produit -> produit % facteur .)
    )               reduce using rule 12 (produit -> produit % facteur .)
    -               reduce using rule 12 (produit -> produit % facteur .)
    +               reduce using rule 12 (produit -> produit % facteur .)
    ,               reduce using rule 12 (produit -> produit % facteur .)


state 49

    (13) produit -> produit / facteur .
    %               reduce using rule 13 (produit -> produit / facteur .)
    /               reduce using rule 13 (produit -> produit / facteur .)
    *               reduce using rule 13 (produit -> produit / facteur .)
    )               reduce using rule 13 (produit -> produit / facteur .)
    -               reduce using rule 13 (produit -> produit / facteur .)
    +               reduce using rule 13 (produit -> produit / facteur .)
    ,               reduce using rule 13 (produit -> produit / facteur .)


state 50

    (14) produit -> produit * facteur .
    %               reduce using rule 14 (produit -> produit * facteur .)
    /               reduce using rule 14 (produit -> produit * facteur .)
    *               reduce using rule 14 (produit -> produit * facteur .)
    )               reduce using rule 14 (produit -> produit * facteur .)
    -               reduce using rule 14 (produit -> produit * facteur .)
    +               reduce using rule 14 (produit -> produit * facteur .)
    ,               reduce using rule 14 (produit -> produit * facteur .)


state 51

    (6) facteur -> IDENTIFIANT ( exprList . )
    )               shift and go to state 55


state 52

    (7) facteur -> IDENTIFIANT ( ) .
    SUPERIEUR_OU_EGAL reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    INFERIEUR_OU_EGAL reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    NON_EGAL        reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    EGAL            reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    %               reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    /               reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    *               reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    )               reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    -               reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    +               reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    ,               reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    OU              reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)
    ET              reduce using rule 7 (facteur -> IDENTIFIANT ( ) .)


state 53

    (21) exprList -> expr . , exprList
    (22) exprList -> expr .
    (18) expr -> expr . - produit
    (19) expr -> expr . + produit
    ,               shift and go to state 56
    )               reduce using rule 22 (exprList -> expr .)
    -               shift and go to state 21
    +               shift and go to state 22


state 54

    (8) facteur -> LIRE ( ) .
    SUPERIEUR_OU_EGAL reduce using rule 8 (facteur -> LIRE ( ) .)
    INFERIEUR_OU_EGAL reduce using rule 8 (facteur -> LIRE ( ) .)
    NON_EGAL        reduce using rule 8 (facteur -> LIRE ( ) .)
    EGAL            reduce using rule 8 (facteur -> LIRE ( ) .)
    %               reduce using rule 8 (facteur -> LIRE ( ) .)
    /               reduce using rule 8 (facteur -> LIRE ( ) .)
    *               reduce using rule 8 (facteur -> LIRE ( ) .)
    )               reduce using rule 8 (facteur -> LIRE ( ) .)
    -               reduce using rule 8 (facteur -> LIRE ( ) .)
    +               reduce using rule 8 (facteur -> LIRE ( ) .)
    ,               reduce using rule 8 (facteur -> LIRE ( ) .)
    OU              reduce using rule 8 (facteur -> LIRE ( ) .)
    ET              reduce using rule 8 (facteur -> LIRE ( ) .)


state 55

    (6) facteur -> IDENTIFIANT ( exprList ) .
    SUPERIEUR_OU_EGAL reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    INFERIEUR_OU_EGAL reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    NON_EGAL        reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    EGAL            reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    %               reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    /               reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    *               reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    )               reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    -               reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    +               reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    ,               reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    OU              reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)
    ET              reduce using rule 6 (facteur -> IDENTIFIANT ( exprList ) .)


state 56

    (21) exprList -> expr , . exprList
    (21) exprList -> . expr , exprList
    (22) exprList -> . expr
    (16) expr -> . booleen
    (17) expr -> . - facteur
    (18) expr -> . expr - produit
    (19) expr -> . expr + produit
    (20) expr -> . produit
    (23) booleen -> . facteur SUPERIEUR_OU_EGAL facteur
    (24) booleen -> . facteur INFERIEUR_OU_EGAL facteur
    (25) booleen -> . facteur NON_EGAL facteur
    (26) booleen -> . facteur EGAL facteur
    (27) booleen -> . booleen OU booleen
    (28) booleen -> . booleen ET booleen
    (29) booleen -> . NON booleen
    (30) booleen -> . BOOLEEN
    (12) produit -> . produit % facteur
    (13) produit -> . produit / facteur
    (14) produit -> . produit * facteur
    (15) produit -> . facteur
    (6) facteur -> . IDENTIFIANT ( exprList )
    (7) facteur -> . IDENTIFIANT ( )
    (8) facteur -> . LIRE ( )
    (9) facteur -> . IDENTIFIANT
    (10) facteur -> . ENTIER
    (11) facteur -> . ( expr )
    -               shift and go to state 11
    NON             shift and go to state 14
    BOOLEEN         shift and go to state 15
    IDENTIFIANT     shift and go to state 16
    LIRE            shift and go to state 17
    ENTIER          shift and go to state 18
    (               shift and go to state 8

    expr                           shift and go to state 53
    exprList                       shift and go to state 57
    booleen                        shift and go to state 10
    facteur                        shift and go to state 12
    produit                        shift and go to state 13

state 57

    (21) exprList -> expr , exprList .
    )               reduce using rule 21 (exprList -> expr , exprList .)


Conflicts:

shift/reduce conflict for OU in state 33 resolved as shift
shift/reduce conflict for ET in state 33 resolved as shift
shift/reduce conflict for OU in state 42 resolved as shift
shift/reduce conflict for ET in state 42 resolved as shift
shift/reduce conflict for OU in state 43 resolved as shift
shift/reduce conflict for ET in state 43 resolved as shift